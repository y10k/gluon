# -*- coding: utf-8 -*-

base_dir = File.dirname(__FILE__)

require 'rbconfig'
include RbConfig

CONFIG['RUBY_INSTALL_NAME'] =~ /^(.*)ruby(.*)$/i or raise 'not found RUBY_INSTALL_NAME'
prefix = $1
suffix = $2

rake_cmd = "#{prefix}rake#{suffix}"
gem_cmd = "#{prefix}gem#{suffix}"

server = 'rackup'
server += ' ' + ENV['RACKUP_OPTS'] if (ENV.key? 'RACKUP_OPTS')

desc 'start server (optional parameters: RACKUP_OPTS).'
task :server => [ :seed ] do
  sh server
end

desc 'start CGI server.'
task :cgi_server => [ :seed ] do
  ruby "#{base_dir}/bin/cgi_server"
end

desc 'make random seed for cookie based session.'
task :seed do
  seed = "#{base_dir}/seed"
  unless File.exist? seed then
    puts 'make random seed for cookie based session.'
    require 'digest'
    id = Digest::MD5.new
    now = Time.now
    id.update(now.to_s)
    id.update(now.usec.to_s)
    id.update(rand(0).to_s)
    id.update($$.to_s)
    id.update(Dir.getwd)
    File.open(seed, 'w:us-ascii') do |f|
      f.write id.hexdigest
    end
  end
end

desc 'clean garbage files'
task :clean do
  for f in Dir['**/*.erbc'] + Dir['*~']
    rm f
  end
end

gluon_local = [ "#{base_dir}/bin/gluon_local", '-d', base_dir ]

desc 'project local RubyGems (optional parameters: GEM_ARGS).'
task :local_gem do
  ruby *gluon_local, "#{gem_cmd} #{ENV['GEM_ARGS']}"
end

desc 'start server (project local RubyGems repository).'
task :local_server => [ :seed ] do
  ruby *gluon_local, server
end

desc 'make CGI environment for project local RubyGems repository.'
task :local_cgi_env do
  cgi_env = "#{base_dir}/cgi.env"
  if File.exist? cgi_env then
    mv cgi_env, cgi_env + File.stat(cgi_env).mtime.strftime(".backup_%Y%m%d_%H%M%S")
  end
  File.open(cgi_env, 'w:us-ascii') do |f|
    f.puts '#!/bin/sh'
    f.puts 'RUBYOPT=rubygems; export RUBYOPT'
    f.puts 'GEM_HOME="$BASE_DIR/gems"; export GEM_HOME'
    f.puts 'PATH="$PATH:$GEM_HOME/bin"; export PATH'
  end
end

# Local Variables:
# mode: Ruby
# indent-tabs-mode: nil
# End:
